/*! ember-encore - v1.0.0 - 2014-06-23
 * http://github.com/mirego/ember-encore
 *
 * Copyright (c) 2014 Mirego <http://mirego.com>;
 * Licensed under the New BSD license */

define("ember-encore/adapter",["exports"],function(a){"use strict";a["default"]=DS.RESTAdapter.extend({defaultSerializer:"-encore",pathForType:function(a){return Ember.String.pluralize(Ember.String.underscore(a))},ajaxError:function(a){var b=this._super(a),c=JSON.parse(a.responseText);if(a&&422===a.status){var d=c.errors.reduce(function(a,b){return a[b.field]=b.types[0],a},{});return new DS.InvalidError(d)}return b}})}),define("ember-encore/initializer",["ember-encore/adapter","ember-encore/serializer"],function(a,b){"use strict";var c=a["default"],d=b["default"];Ember.onLoad("Ember.Application",function(a){a.initializer({name:"ember-encore",initialize:function(a){a.register("adapter:-encore",c),a.register("serializer:-encore",d)}})})}),define("ember-encore/serializer",["exports"],function(a){"use strict";var b=Ember.get,c=Ember.isNone,d=Ember.isArray,e=Ember.String.camelize,f=Ember.String.underscore,g=Ember.String.classify,h=Ember.String.pluralize,i=Ember.String.singularize;a["default"]=DS.RESTSerializer.extend({camelizeKeys:function(a){for(var b in a){var c=e(b);c!=b&&(a[c]=a[b],delete a[b])}},extract:function(a,b,c,d,e){return delete c.links,this.extractLinked(c),this._super(a,b,c,d,e)},extractSingle:function(a,b,c,e,g){var h=b.typeKey;for(var j in c){var k=i(j);if(k===f(h)&&d(c[j])){c[k]=c[j][0];break}}return delete c[j],this._super(a,b,c,e,g)},extractLinks:function(a,b,c){for(var d in c.links){var f=c.links[d],g=e(d);if(f&&f.href){var h=i(e(f.type));if(a.getById(h,f.id))c[g]=f.id,delete c.links[d];else{var j=b.store.adapterFor(b).namespace;c.links[g]="/"+j+f.href,g!=d&&delete c.links[d]}}else c[g]=c.links[d],delete c.links[d]}0===Ember.keys(c.links).length&&delete c.links},extractLinked:function(a){for(var b in a.linked)a[b]?a["_"+b]=a.linked[b]:a[b]=a.linked[b];delete a.linked},normalize:function(a,b){return b=this._super(a,b),b&&b.links&&this.extractLinks(a.store,a,b),this.camelizeKeys(b),b},extractMeta:function(a,b,c){for(var d in c.meta){var e=c.meta[d];this.camelizeKeys(e),a.metaForType(b,e)}delete c.meta},serializeIntoHash:function(a,b,c,d){a[h(f(b.typeKey))]=[this.serialize(c,d)]},keyForAttribute:function(a){return f(a)},serializeBelongsTo:function(a,d,e){var g=e.key,h=b(a,g);g=this.keyForRelationship?this.keyForRelationship(g,"belongsTo"):g,d.links||(d.links={}),d.links[f(g)]=c(h)?null:b(h,"id"),delete d[g]},serializePolymorphicType:function(a,c,d){var e=d.key,f=b(a,e);e=this.keyForAttribute?this.keyForAttribute(e):e,c[e+"_type"]=g(f.constructor.typeKey),delete c[d.key]}})});